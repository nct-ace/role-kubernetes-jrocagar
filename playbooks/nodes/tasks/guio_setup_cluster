
# master node

sudo vi /etc/hosts

192.0.0.1 master.cloudservices.com master
192.0.0.2 worker.cloudservices.com worker


sudo yum install docker -y

sudo systemctl enable docker

systemctl start  docker

systemctl status docker

# Disable SELinux
sudo setenforce 0

# Disable firewall
sudo systemctl disable firewalld
sudo systemctl stop firewalld

# Disable swapping
sudo swapoff -a

# Enable the usage of iptables
sudo bash -c 'echo "net.bridge.bridge-nf-call-ip6tables = 1" > /etc/sysctl.d/k8s.conf'
sudo bash -c 'echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.d/k8s.conf'
sudo sysctl --system

# Add the Kubernetes repo to rum.repos.d
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kubelet kubeadm kubectl
EOF

# Set SELinux in permissive mode (effectively disabling it)
sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

sudo systemctl enable --now kubelet

# >>>>>>> ONLY MASTER

#Initialize Kubernetes cluster
sudo kubeadm init --apiserver-advertise-address=100.0.0.1 --pod-network-cidr=10.244.0.0/16

#Note down the kubeadm join command
>>> (1)

# Move kube config
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


#Apply CNI from kube-flannel.yml
wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml


#Look out for the Ethernet i.e. eth1 which has a ip address 100.0.0.1
# (this is the ip address )

ip a s

vi kube-flannel.yml

#  args:
#  - --ip-masq
#  - --kube-subnet-mgr
#  - --iface=eth1

# Apply the flannel configuration
kubectl apply -f kube-flannel.yml
# <<<<<<<ONLY MASTER


# >>>>>> WORKER
#Join master node run only on worker node
>>> (1)
# <<<<<< WORKER
